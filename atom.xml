<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>败寇路飞.field</title>
  <subtitle>一只不断学习的渣</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://chengluffy.github.io/"/>
  <updated>2016-08-05T11:01:41.000Z</updated>
  <id>https://chengluffy.github.io/</id>
  
  <author>
    <name>成璐飞</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>office文件的iOS-UTI支持</title>
    <link href="https://chengluffy.github.io/2016/08/05/office%E6%96%87%E4%BB%B6%E7%9A%84iOS-UTI%E6%94%AF%E6%8C%81/"/>
    <id>https://chengluffy.github.io/2016/08/05/office文件的iOS-UTI支持/</id>
    <published>2016-08-05T10:45:24.000Z</published>
    <updated>2016-08-05T11:01:41.000Z</updated>
    
    <content type="html">&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;文件格式&lt;/th&gt;
&lt;th&gt;UTI Types&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;  doc&lt;/td&gt;
&lt;td&gt;com.microsoft.word.doc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;  docx&lt;/td&gt;
&lt;td&gt;org.openxmlformats.wordprocessingml.document&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;  ppt&lt;/td&gt;
&lt;td&gt;com.microsoft.powerpoint.ppt&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;  pptx&lt;/td&gt;
&lt;td&gt;org.openxmlformats.presentationml.presentation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;  xls&lt;/td&gt;
&lt;td&gt;com.microsoft.excel.xls&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;  xlsx&lt;/td&gt;
&lt;td&gt;org.openxmlformats.spreadsheetml.sheet&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;但是仅仅是这样是不够的，以 &lt;code&gt;.docx&lt;/code&gt; 格式为例，还需要增加 &lt;code&gt;CFBundleTypeRole&lt;/code&gt; 和 &lt;code&gt;LSHandlerRank&lt;/code&gt; 两个键值。&lt;/p&gt;
&lt;p&gt;以 &lt;code&gt;.docx&lt;/code&gt; 设置 &lt;code&gt;info.plist&lt;/code&gt; 的 &lt;code&gt;Source Code&lt;/code&gt; 代码举例&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;dict&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;key&amp;gt;CFBundleTypeName&amp;lt;/key&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;string&amp;gt;Microsoft Word 2003 XML document&amp;lt;/string&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;key&amp;gt;CFBundleTypeRole&amp;lt;/key&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;string&amp;gt;Viewer&amp;lt;/string&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;key&amp;gt;LSHandlerRank&amp;lt;/key&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;string&amp;gt;Alternate&amp;lt;/string&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;key&amp;gt;LSItemContentTypes&amp;lt;/key&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;array&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;string&amp;gt;org.openxmlformats.wordprocessingml.document&amp;lt;/string&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;/array&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/a/14523848/6613238&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Stack Overflow&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/Miscellaneous/Reference/UTIRef/Articles/System-DeclaredUniformTypeIdentifiers.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Apple documentation&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;文件格式&lt;/th&gt;
&lt;th&gt;UTI Types&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;  doc&lt;/td&gt;
&lt;td&gt;com.microsoft.word.doc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;

    
    </summary>
    
      <category term="iOSDev" scheme="https://chengluffy.github.io/categories/iOSDev/"/>
    
    
      <category term="UTI" scheme="https://chengluffy.github.io/tags/UTI/"/>
    
      <category term=".doc" scheme="https://chengluffy.github.io/tags/doc/"/>
    
      <category term=".docx" scheme="https://chengluffy.github.io/tags/docx/"/>
    
      <category term=".ppt" scheme="https://chengluffy.github.io/tags/ppt/"/>
    
      <category term=".pptx" scheme="https://chengluffy.github.io/tags/pptx/"/>
    
      <category term=".xls" scheme="https://chengluffy.github.io/tags/xls/"/>
    
      <category term=".xlsx" scheme="https://chengluffy.github.io/tags/xlsx/"/>
    
  </entry>
  
  <entry>
    <title>JPFPSStatus源码学习</title>
    <link href="https://chengluffy.github.io/2016/07/28/JPFPSStatus%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    <id>https://chengluffy.github.io/2016/07/28/JPFPSStatus源码学习/</id>
    <published>2016-07-27T17:02:30.000Z</published>
    <updated>2016-07-30T05:25:51.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;code&gt;iOS&lt;/code&gt; 调试程序时 &lt;code&gt;FPS&lt;/code&gt; 作为反应 &lt;strong&gt;UI&lt;/strong&gt; 是否流畅的指标，一般的 &lt;strong&gt;60&lt;/strong&gt; 的 &lt;code&gt;FPS&lt;/code&gt; 值时， 程序界面就可以正常流畅地显示，而大型的运算处理等都会降低 &lt;code&gt;FPS&lt;/code&gt; 值造成 &lt;strong&gt;UI&lt;/strong&gt; 卡顿。如何优化程序逻辑以达到提升 &lt;code&gt;FPS&lt;/code&gt; 值的目的不在本次的学习范围内，只是在开发过程中有用到 &lt;a href=&quot;https://github.com/joggerplus/JPFPSStatus&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JPFPSStatus&lt;/a&gt;，代码量不多，学习下。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;首先介绍下主要使用类 &lt;code&gt;CADisplayLink&lt;/code&gt; &lt;strong&gt;Xcode&lt;/strong&gt; 给出的介绍如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Class representing a timer bound to the display vsync&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;翻译应该是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;类代表一个绑定到屏幕垂直同步显示的定时器&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;更加详细的说明见 &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/QuartzCore/Reference/CADisplayLink_ClassRef/#//apple_ref/occ/clm/CADisplayLink&quot; title=&quot;developer.apple&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;需要注意的是&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;CADisplayLink should not be subclassed.&lt;br&gt;CADisplayLink 不可被继承。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;其创建实例的方法为&lt;br&gt;&lt;code&gt;Object-C:&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;+ (CADisplayLink *)displayLinkWithTarget:(id)target&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                selector:(SEL)sel&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;or &lt;code&gt;Swift:&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;init&lt;/span&gt;(target target: &lt;span class=&quot;type&quot;&gt;AnyObject&lt;/span&gt;, selector sel: &lt;span class=&quot;type&quot;&gt;Selector&lt;/span&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;参数解释：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;target:&lt;/th&gt;
&lt;th&gt;An object to be notified when the screen should be updated. // 当屏幕刷新是所通知的对象&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;sel:&lt;/td&gt;
&lt;td&gt;The method to call on the target. // 所通知对象调用的方法&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;实例应被加入 &lt;code&gt;RunLoop&lt;/code&gt;， &lt;code&gt;mode&lt;/code&gt; 选择为： &lt;code&gt;NSRunLoopCommonModes&lt;/code&gt;&lt;br&gt;实例销毁时应从 &lt;code&gt;RunLoop&lt;/code&gt; 中移除。&lt;br&gt;实例创建后默认就开始向目标发送通知，可以设置 &lt;code&gt;Bool&lt;/code&gt; 属性值 &lt;code&gt;paused&lt;/code&gt; 来 &lt;em&gt;暂停／开启&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;另一个关键的属性值 &lt;code&gt;timestamp&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;the time value associated with the last frame that was displayed. (read-only)&lt;br&gt;与已显示的最后一帧相关联的时间值。 （只读）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;那么求 &lt;code&gt;FPS&lt;/code&gt; -界面每秒显示帧数-的基本思路就可以得出， &lt;code&gt;CADisplayLink&lt;/code&gt; 的实例被创建后，界面每次刷新 &lt;strong&gt;UI&lt;/strong&gt; 都会调用所关联的 &lt;code&gt;target&lt;/code&gt; 的 &lt;code&gt;sel&lt;/code&gt; 方法，记录调用次数，在方法中我们拿到 &lt;code&gt;CADisplayLink&lt;/code&gt; 实例，获取其属性值 &lt;code&gt;timestamp&lt;/code&gt; 并记录，当 &lt;code&gt;timestamp&lt;/code&gt; 相差 &lt;em&gt;1秒&lt;/em&gt; 时期间方法调用次数就是界面的 &lt;code&gt;FPS&lt;/code&gt;。具体实现见源码：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (void)displayLinkTick:(CADisplayLink *)link &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    if (lastTime == 0) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      // 初次调用直接记录时间&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        lastTime = link.timestamp;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        return;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    count++;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    NSTimeInterval interval = link.timestamp - lastTime;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    // 在时间差为1s后，count即为fps&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    if (interval &amp;lt; 1) return;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    lastTime = link.timestamp;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    float fps = count / interval;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    count = 0;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    NSString *text = [NSString stringWithFormat:@&amp;quot;%d FPS&amp;quot;,(int)round(fps)];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [fpsLabel setText: text];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    if (_fpsHandler) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        _fpsHandler((int)round(fps));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;以上就是关于FPS计算的主要代码，源码中对系统是否进入活跃状态的通知进行接受，代码如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[[NSNotificationCenter defaultCenter] addObserver: self&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                                 selector: @selector(applicationDidBecomeActiveNotification)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                                     name: UIApplicationDidBecomeActiveNotification&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                                   object: nil];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        [[NSNotificationCenter defaultCenter] addObserver: self&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                                 selector: @selector(applicationWillResignActiveNotification)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                                     name: UIApplicationWillResignActiveNotification&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                                   object: nil];&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;接受通知的方法第一次遇到，记录学习。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;整体实现过程并不复杂，源码使用的是 &lt;code&gt;Object-C&lt;/code&gt; 之后可以用 &lt;code&gt;Swift&lt;/code&gt; 实现一遍（已实现： &lt;a href=&quot;https://github.com/ChengLuffy/FPSStatusSwift&quot; title=&quot;Github&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Demo&lt;/a&gt; ）。&lt;/li&gt;
&lt;li&gt;不理解的是，源码将 &lt;code&gt;fps&lt;/code&gt; 显示的 &lt;code&gt;UILabel&lt;/code&gt; 加载到系统的 &lt;code&gt;rootViewController&lt;/code&gt; 上，也就是说在其他界面是无法显示的，可以加到 &lt;code&gt;Window&lt;/code&gt; 上以达到在所有页面显示的目的。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;iOS&lt;/code&gt; 调试程序时 &lt;code&gt;FPS&lt;/code&gt; 作为反应 &lt;strong&gt;UI&lt;/strong&gt; 是否流畅的指标，一般的 &lt;strong&gt;60&lt;/strong&gt; 的 &lt;code&gt;FPS&lt;/code&gt; 值时， 程序界面就可以正常流畅地显示，而大型的运算处理等都会降低 &lt;code&gt;FPS&lt;/code&gt; 值造成 &lt;strong&gt;UI&lt;/strong&gt; 卡顿。如何优化程序逻辑以达到提升 &lt;code&gt;FPS&lt;/code&gt; 值的目的不在本次的学习范围内，只是在开发过程中有用到 &lt;a href=&quot;https://github.com/joggerplus/JPFPSStatus&quot;&gt;JPFPSStatus&lt;/a&gt;，代码量不多，学习下。&lt;br&gt;
    
    </summary>
    
      <category term="iOSDev" scheme="https://chengluffy.github.io/categories/iOSDev/"/>
    
    
      <category term="iOS FPS" scheme="https://chengluffy.github.io/tags/iOS-FPS/"/>
    
      <category term="源码学习" scheme="https://chengluffy.github.io/tags/%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>iOS模拟器调试3DTouch</title>
    <link href="https://chengluffy.github.io/2016/07/22/iOS%E6%A8%A1%E6%8B%9F%E5%99%A8%E8%B0%83%E8%AF%953DTouch/"/>
    <id>https://chengluffy.github.io/2016/07/22/iOS模拟器调试3DTouch/</id>
    <published>2016-07-22T11:58:44.000Z</published>
    <updated>2016-07-22T16:43:49.000Z</updated>
    
    <content type="html">&lt;p&gt;模拟器设置栏的 &lt;code&gt;Hardware&lt;/code&gt; 内选择 &lt;code&gt;Use Trackpad force for 3D touch&lt;/code&gt; 快捷键 &lt;code&gt;^ + com + 3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;3DTouch-Demo: &lt;a href=&quot;https://github.com/ChengLuffy/3DTouch-Demo&quot; title=&quot;Github&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;参考资料&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://www.jianshu.com/p/3d300d0e626e&quot; title=&quot;跟着官方文档学习3D Touch&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;跟着官方文档学习3D Touch&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.jianshu.com/p/5e2827c9be29&quot; title=&quot;3DTouch入门篇&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;3DTouch入门篇&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;模拟器设置栏的 &lt;code&gt;Hardware&lt;/code&gt; 内选择 &lt;code&gt;Use Trackpad force for 3D touch&lt;/code&gt; 快捷键 &lt;code&gt;^ + com + 3&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;3DTouch-Demo: &lt;a href=
    
    </summary>
    
      <category term="iOSDev" scheme="https://chengluffy.github.io/categories/iOSDev/"/>
    
    
      <category term="3D Touch" scheme="https://chengluffy.github.io/tags/3D-Touch/"/>
    
      <category term="Xcode 模拟器" scheme="https://chengluffy.github.io/tags/Xcode-%E6%A8%A1%E6%8B%9F%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>代码配置IBAnimatable转场动画</title>
    <link href="https://chengluffy.github.io/2016/07/07/%E4%BB%A3%E7%A0%81%E9%85%8D%E7%BD%AEIBAnimatable%E8%BD%AC%E5%9C%BA%E5%8A%A8%E7%94%BB/"/>
    <id>https://chengluffy.github.io/2016/07/07/代码配置IBAnimatable转场动画/</id>
    <published>2016-07-07T13:02:25.000Z</published>
    <updated>2016-07-08T12:10:30.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/JakeLin/IBAnimatable&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;IBAnimatable&lt;/a&gt; 是由 &lt;a href=&quot;https://github.com/JakeLin&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;JakeLin&lt;/a&gt; 在Github上开源的动画开源库，在学习 &lt;code&gt;Swift&lt;/code&gt; 时曾经在练手项目 &lt;a href=&quot;https://github.com/ChengLuffy/ShadowsocksFree&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ShadowsocksFree&lt;/a&gt; 中学习使用过，其最吸引我的是可以在 &lt;code&gt;StoryBoard&lt;/code&gt; 中直接配置转场动画，但是我在项目中一些情境下需要使用代码配置，Github上并没有找到类似的 &lt;code&gt;API&lt;/code&gt; 介绍，最后通过阅读源码实现效果，总结如下。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;文章基于 &lt;code&gt;IBAnimatable 2.3&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;在成功导入后，&lt;code&gt;StoryBoard&lt;/code&gt; 的转场动画就可以配置，所以源码一定是对 &lt;code&gt;UIStoryboardSegue&lt;/code&gt; 进行了继承自定义。在 &lt;code&gt;IBAnimatable&lt;/code&gt; 文件夹内搜索可以得到所有的结果，基于 &lt;code&gt;Demo&lt;/code&gt; 中演示的转场动画，选择 &lt;code&gt;Card&lt;/code&gt; 的 &lt;code&gt;Segue&lt;/code&gt; 设置进行查看。源码如下&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;public class PresentCardsSegue: UIStoryboardSegue &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  public override func perform() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    destinationViewController.transitioningDelegate = PresenterManager.sharedManager().retrievePresenter(.Cards(direction: .Forward))&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    sourceViewController.presentViewController(destinationViewController, animated: true, completion: nil)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;翻译为：目的 &lt;code&gt;VC&lt;/code&gt; 的转场代理的自定义配置、源 &lt;code&gt;VC&lt;/code&gt; 进行模态推出目的 &lt;code&gt;VC&lt;/code&gt; 。点到 &lt;code&gt;PresenterManager&lt;/code&gt; 注释如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Presenter Manager: Used to cache the Presenters for Present and Dismiss transitions&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;证明没找错。&lt;br&gt;&lt;code&gt;PresenterManager&lt;/code&gt; 只有一个方法:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;public func retrievePresenter(transitionAnimationType: TransitionAnimationType, transitionDuration: Duration = defaultTransitionDuration, interactiveGestureType: InteractiveGestureType? = nil) -&amp;gt; Presenter&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其参数：&lt;code&gt;TransitionAnimationType&lt;/code&gt; 点进去之后可以发现是转场动画的枚举； &lt;code&gt;Duration&lt;/code&gt; 即 &lt;code&gt;NSTimeInterval&lt;/code&gt; 用于设定转场动画时间，默认是  &lt;code&gt;0.75&lt;/code&gt;；&lt;code&gt;InteractiveGestureType&lt;/code&gt; 是对目的 &lt;code&gt;VC&lt;/code&gt; 返回源 &lt;code&gt;VC&lt;/code&gt; 的手势枚举，根据所选转场动画的不同手势的参数：&lt;code&gt;GestureDirection&lt;/code&gt; 所选择的枚举值也不同。&lt;/p&gt;
&lt;p&gt;所以当我们有代码配置 &lt;code&gt;IBAnimatable&lt;/code&gt; 转场动画需要时只要设置目的 &lt;code&gt;VC&lt;/code&gt; 的 &lt;code&gt;transitioningDelegate&lt;/code&gt; ，用 &lt;code&gt;PresenterManager&lt;/code&gt;的 &lt;code&gt;retrievePresenter&lt;/code&gt; 方法配置动画选项。之后用源 &lt;code&gt;VC&lt;/code&gt; 模态化推出目的 &lt;code&gt;VC&lt;/code&gt; 就可以。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/JakeLin/IBAnimatable&quot;&gt;IBAnimatable&lt;/a&gt; 是由 &lt;a href=&quot;https://github.com/JakeLin&quot;&gt;JakeLin&lt;/a&gt; 在Github上开源的动画开源库，在学习 &lt;code&gt;Swift&lt;/code&gt; 时曾经在练手项目 &lt;a href=&quot;https://github.com/ChengLuffy/ShadowsocksFree&quot;&gt;ShadowsocksFree&lt;/a&gt; 中学习使用过，其最吸引我的是可以在 &lt;code&gt;StoryBoard&lt;/code&gt; 中直接配置转场动画，但是我在项目中一些情境下需要使用代码配置，Github上并没有找到类似的 &lt;code&gt;API&lt;/code&gt; 介绍，最后通过阅读源码实现效果，总结如下。&lt;/p&gt;
    
    </summary>
    
      <category term="iOSDev" scheme="https://chengluffy.github.io/categories/iOSDev/"/>
    
    
      <category term="IBAnimatable" scheme="https://chengluffy.github.io/tags/IBAnimatable/"/>
    
  </entry>
  
  <entry>
    <title>自己</title>
    <link href="https://chengluffy.github.io/2016/07/03/%E8%87%AA%E5%B7%B1/"/>
    <id>https://chengluffy.github.io/2016/07/03/自己/</id>
    <published>2016-07-03T15:34:30.000Z</published>
    <updated>2016-07-11T12:57:07.000Z</updated>
    
    <content type="html">&lt;p&gt;马上正式毕业，对于自己未来阴暗的预感&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;作为一个二流大学的数学与应用数学专业毕业生，学艺不精，喜欢编程，却到了大三才受到&lt;code&gt;iOS:Object-C&lt;/code&gt; 的系统教育，没有办法理解那么多底层的东西可能是编程人生的一大败笔。结合现在的就业形势，突然有了一种不好的预感。&lt;/p&gt;
&lt;p&gt;大三的时候开始学习&lt;code&gt;Object-C&lt;/code&gt; ，当时移动端编程比较热门的是 &lt;strong&gt;Android&lt;/strong&gt; 和 &lt;strong&gt;iOS&lt;/strong&gt; 端编程，由于大学课程对&lt;code&gt;Java&lt;/code&gt;课程痛苦的回忆以及自己的&lt;code&gt;C&lt;/code&gt;语言基础，所以选择了入门 &lt;strong&gt;iOS&lt;/strong&gt; 端程序开发学习，靠家里支持买了个 &lt;em&gt;MBP&lt;/em&gt; 从此开始一入编程深似海，也深深的热爱上了码代码。&lt;/p&gt;
&lt;p&gt;关于&lt;code&gt;Object-C&lt;/code&gt;的学习过程，其实有一点 &lt;code&gt;C&lt;/code&gt; 语言或者 &lt;code&gt;Java&lt;/code&gt; 语言基础，应该很好理解。大多数人所说的难点：面向对象编程也只有真正的熟悉代码后的思考才会有用，所以，当时并没有什么感悟，直到看大神们的编程源码才真正懂得一些。学习的后半端会尝试一些 &lt;code&gt;MVC&lt;/code&gt; 等设计思路，当时想的太少，导致后面看大神源码时的深深的挫败感。对于编程基础课程的缺失表现在无法处理 &lt;code&gt;SQLite&lt;/code&gt; 语句这一项，好在在之后接触到 &lt;a href=&quot;https://realm.io/cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Realm&lt;/a&gt;，算是度过了这一关，至于以后遇到 &lt;code&gt;SQLite&lt;/code&gt; 的需要，也只能面向 &lt;strong&gt;Google&lt;/strong&gt; 编程了=_=。&lt;/p&gt;
&lt;p&gt;说到挫败感，最大的还是实习期间的第一个项目。大四在石家庄的一家创业公司实习，独立完成一个 iPad 端应用，如今也被老板卖给不同的客户有了不同的版本，一直没有告诉他的是，我始终没有办法处理应用消耗内存过高的问题，由于整个应用的显示都是图片，所以猜测是那个地方不停的出现内存泄漏，当时正好遇到了各位开发大神在网上争论 &lt;code&gt;iOS&lt;/code&gt; 开发圆角的最佳实现，在拜读各位大神为了流畅性而做出的努力后第一次有了： &lt;del&gt;我可能一辈子都无法达到那种高度&lt;/del&gt; 的感觉。而关于代码中的重复代码过多，以及对于 &lt;em&gt;3D&lt;/em&gt; 图像的处理，依然找不到合适的解决办法。之后对于一些动画的学习应用也只不过是聊以自慰。&lt;/p&gt;
&lt;p&gt;之后开始学习 &lt;code&gt;Swift&lt;/code&gt; 说实话，我可以明确的感觉到它是一门很漂亮的语言，但是在&lt;strong&gt;&lt;em&gt;闭包&lt;/em&gt;&lt;/strong&gt;减肥－简化的学习中又遇到了相当大的挫败感，按照怎样的方式把&lt;strong&gt;&lt;em&gt;闭包&lt;/em&gt;&lt;/strong&gt;写的尽可能的简单，现在都没想明白。之后也因为大四需要毕业答辩而回学校做准备，同时在此期间真正意义上爱上了 &lt;em&gt;面向Google编程&lt;/em&gt;，至于毕业论文，也由于自己这一年多的实践很简单的完成。而翻墙的过程中也正好是学习 &lt;code&gt;Swift&lt;/code&gt; 的时间，所以有了 &lt;a href=&quot;https://github.com/ChengLuffy/ShadowsocksFree&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ShadowsocksFree&lt;/a&gt; 这个 &lt;code&gt;Shadowsocks&lt;/code&gt;账号的归档管理工具的写作想法，这段时间还是蛮开心的。&lt;/p&gt;
&lt;p&gt;对于自己的第一份工作，工资很少，没见过三险一金，甚至作为一个新手，根本没有大神在工作中进行指导，主管只看效果、催进度，所以即使离开倒也没有什么特别的失落感。现在学校的一切处理接近尾声，也要开始考虑找一份新的工作时，惊奇的发现满大街都是手机端开发工程师-_-#，一个比一个厉害，招聘要求一个比一个高，倒不是对自己不自信，只是隐隐的对于可能无法从事编程开发行业的担忧，或许就会想自己身边的一些人，大学毕业从事一些毫无疑义的工作的害怕心理，之后这些心理慢慢发展成自己的阴暗面折麽着自己。&lt;/p&gt;
&lt;p&gt;做开发的程序员那么多，真正能证明自己价值的也没多少，自己会在之后站在怎样的高度，这是之前的担忧。现在众多羁绊也使得自己在这条路上走下去的愿景变得有点不现实😂。&lt;/p&gt;
&lt;p&gt;我想无论之后从事怎样的行业，对于这个行业的热爱是不会减退的， &lt;code&gt;WWDC2016&lt;/code&gt; 看的我热血沸腾，继续码代码是我对于未来美好生活的一点点急切的希望。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;马上正式毕业，对于自己未来阴暗的预感&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="https://chengluffy.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="迷茫" scheme="https://chengluffy.github.io/tags/%E8%BF%B7%E8%8C%AB/"/>
    
  </entry>
  
  <entry>
    <title>怪蜀黍的编程日记</title>
    <link href="https://chengluffy.github.io/2016/07/02/%E7%BC%96%E7%A8%8B%E6%97%A5%E8%AE%B0/"/>
    <id>https://chengluffy.github.io/2016/07/02/编程日记/</id>
    <published>2016-07-01T16:30:08.000Z</published>
    <updated>2016-07-30T05:37:43.000Z</updated>
    
    <content type="html">&lt;p&gt;一个并不是要成为海贼王的路飞，希望能在代码中找到自己的意义所在－_－!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/Dream.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;project&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt; &lt;a href=&quot;https://github.com/ChengLuffy/FPSStatusSwift&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;FPSStatusSwift&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;FPS&lt;/code&gt; 实时显示的swift实现， &lt;a href=&quot;/2016/07/28/JPFPSStatus源码学习/&quot;&gt;Blog&lt;/a&gt; 。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; &lt;a href=&quot;https://github.com/ChengLuffy/3DTouch-Demo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;3DTouch-Demo&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;学习 &lt;code&gt;3D Touch&lt;/code&gt;。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt; &lt;a href=&quot;https://github.com/ChengLuffy/Popover&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Popover&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Fork自&lt;a href=&quot;https://github.com/corin8823/Popover&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;corin8823/Popover&lt;/a&gt; 应用到&lt;code&gt;ShadowsocksFress&lt;/code&gt;项目中，并作相应的本地化适应。对于边缘点击的修正得到了原作者的注意。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;  &lt;a href=&quot;https://github.com/ChengLuffy/ShadowsocksFree&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ShadowsocksFree&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Swift&lt;/code&gt;实践项目，有感于搬瓦工的不稳定性，从&lt;a href=&quot;http://www.ishadowsocks.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ishadowsocks&lt;/a&gt; 获取限时免费的&lt;strong&gt;SS&lt;/strong&gt;账号度过不稳定期。同时作为&lt;code&gt;Swift&lt;/code&gt;第一个实践项目，尽可能的完善相关功能，属于&lt;strong&gt;SS&lt;/strong&gt;账号归档管理工具。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;  &lt;a href=&quot;https://github.com/ChengLuffy/UITableViewCellAutoHeight&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UITableViewCellAutoHeight&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Object-C&lt;/code&gt;代码，同样是实习工作时项目需要。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;  &lt;a href=&quot;https://github.com/ChengLuffy/StarsForEvaluation&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;StarsForEvaluation&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Object-C&lt;/code&gt;实现触摸或输入给予星评，实习工作时的项目需要。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;  &lt;a href=&quot;https://github.com/ChengLuffy/RefreshControl-ImageViewAnimation&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;RefreshControl-ImageViewAnimation&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;Swift&lt;/code&gt;学习初实践。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;  &lt;a href=&quot;https://github.com/ChengLuffy/AnimationForShoppingCart&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AnimationForShoppingCart&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;学习iOS开发是对CA动画的实践项目，&lt;code&gt;Object-C&lt;/code&gt;代码，同时制作了&lt;code&gt;cocoaPods&lt;/code&gt;轮子。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;一个并不是要成为海贼王的路飞，希望能在代码中找到自己的意义所在－_－!&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/Dream.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="工程" scheme="https://chengluffy.github.io/categories/%E5%B7%A5%E7%A8%8B/"/>
    
    
      <category term="GitHub汇总" scheme="https://chengluffy.github.io/tags/GitHub%E6%B1%87%E6%80%BB/"/>
    
  </entry>
  
</feed>
